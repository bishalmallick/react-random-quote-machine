{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","quotes","index","getRandomIndex","bind","fetch","then","res","json","setState","this","length","Math","floor","random","quote","className","size","author","href","encodeURI","target","rel","onClick","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAsEeA,E,kDA/Db,aAAe,IAAD,8BACZ,gBACOC,MAAQ,CACXC,OAAQ,GACRC,MAAO,GAET,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBANZ,E,qDASd,WAAqB,IAAD,OAClBC,MAbQ,0IAaGC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAC,GACtC,EAAKE,SAAS,CACZR,OAAQM,EAAIN,c,4BAKlB,WACE,IAAQA,EAAWS,KAAKV,MAAhBC,OACR,GAAGA,EAAOU,OAAS,EAAG,CACpB,IAAMT,EAAQU,KAAKC,MAAMD,KAAKE,SAAWb,EAAOU,QAChDD,KAAKD,SAAS,CACZP,a,oBAKN,WACE,MAA0BQ,KAAKV,MAAvBC,EAAR,EAAQA,OAEFc,EAAQd,EAFd,EAAgBC,OAIlB,OAAGD,EAAOU,OAAS,EAEf,qBAAKK,UAAU,MAAf,SACE,sBAAKA,UAAU,aAAf,UACE,wDACA,sBAAKA,UAAU,cAAf,UACE,oBAAGA,UAAU,QAAb,UAAqB,cAAC,IAAD,CAAaC,KAAK,UAAvC,IAAkDF,EAAMA,MAAxD,OACA,mBAAGC,UAAU,SAAb,SAAsB,sCAASD,EAAMG,YACrC,sBAAKF,UAAW,MAAhB,UACE,iCAAQ,mBAAGG,KAAMC,UAAU,4CAAD,OAA6CL,EAAMA,MAAnD,cAA8DA,EAAMG,SAAWG,OAAO,SAASC,IAAI,sBAArH,SAA2I,cAAC,IAAD,CAAWL,KAAK,aACnK,wBAAQM,QAASb,KAAKP,eAAtB,6BAGJ,qBAAKa,UAAU,SAAf,SACE,iCACE,oBAAGA,UAAU,eAAb,8CAC8B,mBAAGG,KAAK,mCAAmCE,OAAO,SAASC,IAAI,sBAA/D,yCAQjC,qBAAKN,UAAY,aAAjB,SACL,+C,GA1DYQ,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.15eff902.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport { FaTwitter, FaQuoteLeft } from 'react-icons/fa';\nimport './App.css';\n\nconst API = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"\n\nclass App extends Component {\n  constructor() {\n    super(); \n      this.state = {\n        quotes: [],\n        index: 0\n      }\n      this.getRandomIndex = this.getRandomIndex.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(API).then(res => res.json()).then(res => {\n      this.setState({\n        quotes: res.quotes\n      });\n    });\n  }\n\n  getRandomIndex() {\n    const { quotes } = this.state;\n    if(quotes.length > 0) {\n      const index = Math.floor(Math.random() * quotes.length);\n      this.setState({\n        index\n      })\n    }\n  }\n  \n  render() {\n    const { quotes, index } = this.state;\n\n    const quote = quotes[index];\n\n  if(quotes.length > 0) {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <h1>\"Random Quote Machine\"</h1>\n          <div className=\"quote-block\">\n            <p className=\"quote\"><FaQuoteLeft size=\"1.2em\"/> {quote.quote}\"</p>\n            <p className=\"author\"><cite>- {quote.author}</cite></p>\n            <div className= \"btn\">\n              <button><a href={encodeURI(`http://www.twitter.com/intent/tweet?text=${quote.quote} - ${quote.author}`)} target=\"_blank\" rel=\"noopener noreferrer\"><FaTwitter size=\"25px\"/></a></button>\n              <button onClick={this.getRandomIndex}>New Quote</button>\n            </div>\n          </div>\n          <div className=\"footer\">\n            <footer>\n              <p className=\"footer__text\">\n              Â© 2021 - Website developed by <a href=\"https://github.com/bishalmallick\" target=\"_blank\" rel=\"noopener noreferrer\"> Bishal Mallick</a>\n              </p>\n            </footer>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return(<div className = \"App-header\">\n      <h1>Loading</h1>\n    </div>)\n  }\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}